/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/startData.js":
/*!**************************!*\
  !*** ./src/startData.js ***!
  \**************************/
/***/ (() => {

eval("\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/* eslint-disable max-len */\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-use-before-define */\nvar startData = document.querySelector('#startData');\nvar startButton = document.querySelector('#start-button');\nvar startBtn = document.querySelector('#start-btn');\nvar endBtn = document.querySelector('#end-btn');\nvar intervalId;\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var response, data, startRuntTime, startNow, todayStart, startRunTime;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('/get-start-data');\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(data);\n          startRuntTime = data;\n\n          if (startRuntTime != 0) {\n            startNow = startRuntTime;\n            startCounting(startNow);\n            startBtn.style.display = 'none';\n            endBtn.style.display = 'inline';\n            console.log(startRuntTime);\n            todayStart = document.getElementById('todayStart');\n\n            if (todayStart.innerText == '00 : 00') {\n              startRunTime = new Date(data);\n              todayStart.innerText = startRunTime.toLocaleString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true\n              });\n            }\n          }\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();\n\nstartData.addEventListener('submit', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(e) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            e.preventDefault();\n            debounce(todoStart(), 1000);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n\nfunction todoStart() {\n  return _todoStart.apply(this, arguments);\n} // End button click event function\n\n\nfunction _todoStart() {\n  _todoStart = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    var projectName, projectDetails, modal, object, response, data, todayStart;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            projectName = document.querySelector('#projectName');\n            projectDetails = document.querySelector('#projectDetails');\n            modal = document.querySelector('#myModal');\n            object = {\n              projectId: projectName.value,\n              workDetails: projectDetails.value\n            };\n            _context4.next = 6;\n            return fetch('/attendance-start', {\n              method: 'POST',\n              headers: {\n                'Content-type': 'application/json; charset=UTF-8'\n              },\n              body: JSON.stringify(object)\n            });\n\n          case 6:\n            modal.style.display = 'none';\n            startBtn.style.display = 'none';\n            endBtn.style.display = 'inline';\n            _context4.next = 11;\n            return fetch('/get-start-data');\n\n          case 11:\n            response = _context4.sent;\n            _context4.next = 14;\n            return response.json();\n\n          case 14:\n            data = _context4.sent;\n            startCounting(data);\n            todayStart = document.getElementById('todayStart');\n\n            if (todayStart.innerText == '00 : 00') {\n              todayStart.innerText = currentTime();\n            }\n\n          case 18:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _todoStart.apply(this, arguments);\n}\n\nendBtn.addEventListener('click', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(event) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            event.preventDefault();\n            _context3.next = 3;\n            return debounce(todoEnd(), 1000);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}()); //\n\nfunction todoEnd() {\n  return _todoEnd.apply(this, arguments);\n} //\n\n\nfunction _todoEnd() {\n  _todoEnd = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n    var hiddenData, dashboardInfo, response, data, getTodayData, start, end, breakTime, todayTotalData, todayTotal, totalWorkTime, lastData;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            hiddenData = document.getElementById('hidden-data');\n            dashboardInfo = document.getElementById('dashboard-info');\n\n            if (dashboardInfo.classList.contains('dashboard-none')) {\n              dashboardInfo.classList.remove('dashboard-none');\n            } // Stop counting\n\n\n            clearInterval(intervalId);\n            document.getElementById('elapsedTime').textContent = '00:00:00'; // End button to Api call\n\n            _context5.next = 7;\n            return fetch('/attendance-end', {\n              method: 'POST',\n              headers: {\n                'Content-type': 'application/json; charset=UTF-8'\n              }\n            });\n\n          case 7:\n            response = _context5.sent;\n            console.log('end12');\n            _context5.next = 11;\n            return response.json();\n\n          case 11:\n            data = _context5.sent;\n            startBtn.style.display = 'inline';\n            console.log('end');\n            endBtn.style.display = 'none'; // // Destructuring data\n\n            getTodayData = data.getTodayData, start = data.start, end = data.end, breakTime = data.breakTime, todayTotalData = data.todayTotalData;\n            todayTotal = todayTotalData.todayTotal;\n            totalWorkTime = timeToHour(todayTotal); // Last index data\n\n            lastData = getTodayData[getTodayData.length - 1];\n            console.log(start); // Update today history table\n\n            if (hiddenData) {\n              console.log('hidden data');\n              hiddenData.style.display = 'none';\n            }\n\n            setTodayDetails(start, end, totalWorkTime, breakTime); // setTodayReport(lastData.project_name, lastData.work_details, lastData.start, lastData.end, lastData.total)\n\n            debounce(setTodayReport(lastData.project_name, lastData.work_details, lastData.start, lastData.end, lastData.total), 1000);\n\n          case 23:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _todoEnd.apply(this, arguments);\n}\n\nfunction setTodayDetails(start, end, total, breaktime) {\n  var todayStart = document.getElementById('todayStart');\n  var todayEnd = document.getElementById('todayEnd');\n  var todayTotal = document.getElementById('todayTotal');\n  var breakTime = document.getElementById('breakTime');\n  console.log(start);\n  todayStart.innerText = start;\n  todayEnd.innerText = end;\n  todayTotal.innerText = total;\n  breakTime.innerText = breaktime;\n}\n\nfunction setTodayReport(project, details, start, end, total) {\n  var todayReport = document.getElementById('todayReport');\n  var data = \"<tr>\\n  <td class=\\\"project-name\\\">\".concat(project, \"</td>\\n  <td class=\\\"project-work\\\">\").concat(details, \"</td>\\n  <td>\").concat(start, \"</td>\\n  <td>\").concat(end, \"</td>\\n  <td>\").concat(total, \"</td>\\n  <td class=\\\"user-more\\\">\\n          <svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n            <rect width=\\\"40\\\" height=\\\"40\\\" rx=\\\"15\\\"></rect>\\n            <circle cx=\\\"10\\\" cy=\\\"20\\\" r=\\\"2\\\" fill=\\\"#4A4A4A\\\"></circle>\\n            <circle cx=\\\"20\\\" cy=\\\"20\\\" r=\\\"2\\\" fill=\\\"#4A4A4A\\\"></circle>\\n            <circle cx=\\\"30\\\" cy=\\\"20\\\" r=\\\"2\\\" fill=\\\"#4A4A4A\\\"></circle>\\n          </svg>        </td> \\n  </tr>\");\n  todayReport.insertAdjacentHTML('afterend', data);\n} // Current time to start time difference function\n\n\nfunction startCounting(data) {\n  function seconds_to_days_hours_mins_secs_str(seconds) {\n    var hours = Math.floor(seconds / (60 * 60));\n    seconds -= hours * (60 * 60);\n    var minutes = Math.floor(seconds / 60);\n    seconds -= minutes * 60;\n    return \"\".concat(hours < 10 ? \"0\".concat(hours) : hours, \":\").concat(minutes < 10 ? \"0\".concat(minutes) : minutes, \":\").concat(seconds < 10 ? \"0\".concat(seconds) : seconds);\n  }\n\n  function increment() {\n    var elapsedTime = new Date() - new Date(data);\n    document.getElementById('elapsedTime').textContent = seconds_to_days_hours_mins_secs_str(Math.round(elapsedTime / 1000).toString());\n  } // get Set interval ID\n\n\n  var ID = setInterval(increment, 1000); // interval ID\n\n  intervalId = ID;\n}\n\nfunction timeToHour(time) {\n  if (time == null) {\n    return '00hr 00m';\n  }\n\n  var s = time.split(':');\n  var hour = \"\".concat(s[0], \"hr\");\n  var minutes = \"\".concat(s[1], \"m\");\n  var result = \"\".concat(hour, \" \").concat(minutes);\n  return result;\n}\n\nfunction currentTime() {\n  var time = new Date();\n  var startTime = time.toLocaleString('en-US', {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  });\n  return startTime;\n} // debounce handler\n\n\nfunction debounce(fn, delay) {\n  console.log('debounce');\n  var timeoutId;\n  return function () {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(function () {\n      // fn.apply(this, args);\n      fn();\n    }, delay);\n  };\n}\n\n//# sourceURL=webpack://mvc/./src/startData.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/startData.js"]();
/******/ 	
/******/ })()
;