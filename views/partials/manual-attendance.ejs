<div id="myModal" class="modal-container">
  <div class="modal">
    <div class="modal-head">
      <div class="modal-title">Add Attendance</div>
      <div class="modal-close">
        <%- include("../partials/icons/close-svg"); -%>
      </div>
    </div>
    <div class="modal-content">
      <div class="container">
        <form action="" method="post">
          <label for="name">
            <div class="">
              <span class="isExist-attdance"></span>
              <select name="userId" id="userId">
                <option disabled selected>Select Employee</option>
                <% users.map(u=>{ %>
                <option value="<%= u.id %>"><%= u.user_name %></option>

                <% }) %>
              </select>
            </div>
          </label>
          <p class="error employee-error"></p>
          <label for="projectDetails">
            Select Start Date
            <div class="">
              <input
                type="date"
                name="date"
                class="manual-date"
                oninput="manualDate(event);"
              />
              <p class="error date-error"></p>
            </div>
          </label>
          <label for="start">
            Select Start Time
            <div class="time-picker">
              <input
                type="text"
                class="timepicker-ui-input manual-start-time"
                placeholder="00:00"
                name="startTime"
              />
              <p class="error startTime-error"></p>
            </div>
          </label>
          <label for="end">
            Select End Time
            <div class="time-picker">
              <input
                type="text"
                class="timepicker-ui-input manual-end-time"
                placeholder="00:00"
                name="endTime"
              />
              <p class="error endTime-error"></p>
            </div>
          </label>
          <label for="end">
            In Time
            <div class="time-picker">
              <input
                type="text"
                class="timepicker-ui-input"
                placeholder="00:00"
                name="getInTime"
                value="<%= inTime %>"
              />
              <p class="error end-error"></p>
            </div>
          </label>
          <label for="end">
            Out Time
            <div class="time-picker">
              <input
                type="text"
                class="timepicker-ui-input"
                placeholder="00:00"
                name="getOutTime"
                value="<%= outTime %>"
              />
              <p class="error end-error"></p>
            </div>
          </label>
          <div class="">
            <button id="submit-btn" class="submit-btn">Submit</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  const baseUrl = "<%= baseUrl %>";
  console.log(baseUrl);

  function showToast(message,type) {
    const successToast = Toastify({
      text: message,
      className: `${type}`,
    })
    console.log(successToast)
   return successToast.showToast()
  }

  const userId = document.querySelector("#userId");
  const submit = document.querySelector("#submit-btn");
  const isExist = document.querySelector(".isExist-attdance");

  const manualDate = (event) => {
    const date = event.target.value;

    fetch(
      `${baseUrl}/manual-attendance-exist?date=${date}&userId=${userId.value}`
    )
      .then((res) => res.json())

      .then((data) => {
        if (data.length > 0) {
          isExist.textContent = "Attendance Already Exist";
          isExist.style.color = "red";
          const errorPlaceholder = document.querySelector(`date-error`);
          errorPlaceholder.style.display = "none";
        } else {
          isExist.textContent = "";
        }
      });
  };

  submit.addEventListener("click", (e) => {
    e.preventDefault();
    let bodyData = {};
    const error = [];
    const modal = document.querySelector('#myModal')
    const submitBtn = document.getElementById('#submit-btn')
    console.log(submitBtn)
    const form = document.querySelector("form");
    const errorPlaceholders = document.querySelectorAll("p.error");
    for (let i = 0; i < errorPlaceholders.length; i++) {
      errorPlaceholders[i].style.display = "none";
    }
    const inputErrors = document.querySelectorAll("input.error");
    if (inputErrors.length > 0) {
      for (let j = 0; j < inputErrors.length; j++) {
        inputErrors[j].classList.remove("error");
      }
    }
    const select = document.querySelector("select");
    if (select) {
      if (document.querySelector("select").options.selectedIndex === 0) {
        const fieldName = "employee";
        const errorPlaceholder = document.querySelector(`.${fieldName}-error`);
        errorPlaceholder.textContent = `${fieldName} is required!`;
        errorPlaceholder.style.display = "block";
        error.push(fieldName);
      }
    }
    const formData = new FormData(form);
    // eslint-disable-next-line no-restricted-syntax
    for (const [name, value] of formData.entries()) {
      if (name == "date" && value == "") {
        error.push(name);
      }
      bodyData[name] = value;
    }
    for (const fieldName of error) {
      const errorPlaceholder = document.querySelector(`.${fieldName}-error`);
      console.log(errorPlaceholder);
      errorPlaceholder.textContent = `${fieldName} is required!`;
      errorPlaceholder.style.display = "block";
    }
    if (error.length === 0) {
      console.log(bodyData);
      fetch("/manual-attendance", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(bodyData),
      })
        .then((response) => response.json())
        .then((data) => {
          console.log("Success:", data);
          if(data.type=='warning'){
            showToast(data.msg,'warning')
          }else{
            showToast(data.msg,'info')
            modal.style.display = 'none';
            setTimeout(()=>{
              window.location.assign(`${baseUrl}/dashboard`)
            },1000)
          }
        })
        .catch((error) => {
          console.error("Error:", error);
        });
    }
  });
</script>
