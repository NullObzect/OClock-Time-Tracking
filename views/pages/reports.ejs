<%- include("../partials/header"); -%>
<style>
  .date-range-input {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
  }
.date-range-input-container{
  background: #f3f3f3;
  border-radius: 8px;
  padding: 5px 10px;
  height: 45px;
}
  .date-input{
  background: #f3f3f3;
  width: 150px;
  padding:  6px;
  font-size: 16px;
  font-weight: 400;
  color: #5E5E5E;
  border: none;
  outline: none;
  /* border: 1px solid #EAEEF4;
  border-radius: 12px; */
  text-align: left;
}
.date-input:focus, input[type="data"]:focus{
  border: none;
  outline: none !important;

}
.report-title-container{
  margin-top: 8px;
}
.report-title-container p{
  font-size: 14px;
  font-weight: 500;
}

.an-employee-report{
    margin: 20px 0;
    padding: 20px;
    border-radius: 12px;
    border: 1px solid #818181;
    text-transform: capitalize;
    
  }


.an-employee-report tr{
    text-align: left;
  }
.an-employee-report thead {
  padding: 40px;
  font-size: 16px;
  font-weight: 700;
  color: var(--deep-gray);
}


.an-employee-report tbody {
  font-size: 14px;
  font-weight: 600;
  color: var(--deep2);
}

.an-employee-report thead tr th{
  padding-bottom: 25px;
}
.an-employee-report tbody tr td {
  padding-top: 20px;
}
.an-employee-report th,
.an-employee-report td {
  width: 300px;
}
.an-employee-report tfoot tr td {
  padding-top: 30px;
  font-size: 16px;
  font-weight: 600;
  color: var(--deep-gray);
}
.date-to{
  font-size: 16px;
  font-weight: 500;
  padding-top:  6px;
}
  .bg-red-200 {
    color: #fecaca;
  }
  .bg-red-400 {
    color: #f87171;
  }
  .bg-yellow-200 {
    color: #fef08a;
  }
  #reports input:focus {
  outline: none !important;
  border: none;

  
}
  input[type="date"]::before {
	color: #999999;
	content: attr(placeholder);
  border: none;
}
input[type="date"] , input[type="date"]:focus {
	color: #ffffff;
  outline: none;
}
input[type="date"]:focus,
input[type="date"]:valid {
	color: #666666;
}
input[type="date"]:focus::before,
input[type="date"]:valid::before {
	content: "" !important;
}

.filtered-report{
  background: #f3f3f3;
  border-radius: 22px;
  padding: 15px 30px;
  display: flex;
  justify-content: space-between;
  margin-top: 20px;
  display: none;

}
.filtered-report .box{
  background-color: #f3f3f3;
  border: none;
}
</style>

<!--  Markup for an  employee report-->
<div class="reports-container">
<!-- Markup for employee profile -->
<div class="profile">

  <div class="avatar">

    <% if(userInfo.avatar.match(/([\w+]+\:\/\/)?([\w\d-]+\.)*[\w-]+[\.\:]\w+([\/\?\=\&\#\.]?[\w-]+)*\/?/gm)){ %>
        <img
        src="<%= userInfo.avatar%>"
        />
    <%} else{%>
      <img
      src="/uploads/avatars/<%userInfo.avatar===null ? 'demo-avatar.png' : userInfo.avatar %>/>"
      <% } %> 
 
  </div>
  <div class="profile-info">
    <div class="username"><%= userInfo.user_name  %></div>
    <div class="role"><%= userInfo.user_role == "user" ? "Employee" : "Admin"  %> </div>
    <div class="profile-details">
      <div class="email"><%= userInfo.user_mail %> </div>
      <div class="phone"><%= userInfo.user_phone %> </div>
      <div class="social-icon">
        <span
          ><% if(platformUser.find(connection => connection.platform ===
          'facebook')) {%>

          <%- include("../partials/icons/facebook-bold-svg") -%> 

        <% } else{ %>
            <%- include("../partials/icons/facebook-svg") -%> 
        <%}%>
        </span>
        <span
          >
          <% if(platformUser.find(connection => connection.platform ===
                  'google')) {%>
          <a class="social-active" >
            <%- include("../partials/icons/google-svg") -%> 
          </a>
          <% }else{%>
            <%- include("../partials/icons/google-svg") -%> 
             <% } %>
        </span>
        <span>
          <% if(platformUser.find(connection => connection.platform ===
                  'twitter')) {%>
          <a title="Remove" class="social-active">
            <%- include("../partials/icons/twitter-svg") -%> 
          </a>
          <% }else{%>
            <a title="Connect" >
            <%- include("../partials/icons/twitter-svg") -%> 
          </a>
             <% } %>
        </span>
      </div>
    </div>
  </div>
</div>
  <!-- Markup for employee work details  -->

  <div class="work-details">
    <!-- Markup for  Today Box -->
    <div class="today box">
      <h2>Today</h2>
      <div class="details">
        <table class="work">
          <tr>
            <td>Work:</td>
            <td><%= todayReportDetails.todayTotal || "00:00" %> hr <span 
              class="<%= todayReportDetails.totalLess ? 'low' : 'high' %>"><%=   todayReportDetails.totalLess ?  todayReportDetails.totalLess    : '+' + todayReportDetails.totalExtra %> hr</span></td>
          </tr>
          <tr>
            <td>Time:</td>
            <td><%= todayReportDetails.start || "00:00" %> - <%=  todayReportDetails.end || "00:00" %></td>
          </tr>
          <tr>
            <td>Break:</td>
            <td><%= todayReportDetails.breakTime || "0" %> times</td>
          </tr>
          
        </table>
      </div>
    </div>
    <!-- Markup for week box -->

    <div class="week box">
      <h2>This Week</h2>
      <div class="details">
        <table>
          <tr>
            <td>Workday:</td>
          

            <td><%= weekReportDetails.day %>/6 day <span class="<%= Number(6) >  Number(weekReportDetails.day)   ? 'low'  :   Number(6 == weekReportDetails.day) ?  '' : 'high' %>">
            <%= Number(6) >  Number(weekReportDetails.day)   ? '-' + Number( 6 - weekReportDetails.day)  :   Number(6 == weekReportDetails.day) ?  '' :    '+' + Number(weekReportDetails.day - 6) %></span></td>
          </tr>
          <tr>
            <td>Work hour:</td>
            <td><%= weekReportDetails.workHour%>/<%= weekReportDetails.fixedTotalHour   %> hr<span class="<%= weekReportDetails.totalLess ? 'low' : 'high' %>"><%= weekReportDetails.totalLess ?  weekReportDetails.totalLess  : '+' + weekReportDetails.totalExtra %> hr</span></td>
          </tr>
          <tr>
            <td>Avg Work:</td>
            <td> <%= weekReportDetails.avgWorkHour %> hr</td>
          </tr>
          <tr>
            <td>Avg Start:</td>
            <td><%= weekReportDetails.avgStartTime %> </td>
          </tr>
          <tr>
            <td>Avg End:</td>
            <td><%= weekReportDetails.avgEndTime %> </td>
          </tr>
        </table>
      </div>
    </div>
    <div class="month box">
      <h2>This Month</h2>
      <div class="details">
        <table>
          <tr>
            <td>Workday:</td>
            <td> <%=monthReportDetails.day %>/26 day <span class="<%= Number(26) >  Number(monthReportDetails.day)   ? 'low'  :   Number(26 == monthReportDetails.day) ?  '' : 'high' %>">
            <%= Number(26) >  Number(monthReportDetails.day)   ? '-' + Number( 26 - monthReportDetails.day)  :   Number(26 == monthReportDetails.day) ?  '' :    '+' + Number(monthReportDetails.day - 26) %></span> </td>
          </tr>
          <tr>
            <td>Work hour:</td>
            <td><%=monthReportDetails.workHour  + '/' + monthReportDetails.fixedTotalHour %><span class="<%= monthReportDetails.totalLess ? 'low' : 'high' %>"><%= monthReportDetails.totalLess ?  monthReportDetails.totalLess  : '+' + monthReportDetails.totalExtra %> hr</span></td>


            
          </tr>
          <tr>
            <td>Avg Work:</td>
            <td><%=monthReportDetails.avgWorkHour %> hr</td>
          </tr>
          <tr>
            <td>Avg Start:</td>
            <td><%=monthReportDetails.avgStartTime %></td>
          </tr>
          <tr>
            <td>Avg End:</td>
            <td><%=monthReportDetails.avgEndTime %></td>
          </tr>
        </table>
      </div>
    </div>
    <div class="year box">
      <h2>This Year</h2>
      <div class="details">
        <table>
          <tr>
            <td>Workday:</td>
            <td><%= yearReportDetails.day %>/300 day <span class="<%= yearReportDetails.totalLess ? 'low' : 'high' %>"><%= yearReportDetails.totalLess ?  yearReportDetails.totalLess  : '+' + yearReportDetails.totalExtra %> hr</span></td>
          </tr>
          <tr>
            <td>Work hour:</td>
            <td><%=yearReportDetails.workHour  + '/' + yearReportDetails.fixedTotalHour %> hr</td>
          </tr>
          <tr>
            <td>Avg Work:</td>
            <td><%=yearReportDetails.avgWorkHour %> hr</td>
          </tr>
          <tr>
            <td>Avg Start:</td>
            <td><%= yearReportDetails.avgStartTime %> </td>
          </tr>
          <tr>
            <td>Avg End:</td>
            <td><%= yearReportDetails.avgEndTime %></td>
          </tr>
        </table>
      </div>
    </div>
  </div>


  
<!-- Markup Date range for employee-->

<div class="date-range-input">
  <div class="report-title-container">
    <h4>Reports</h4>
    <p>Last seven days.</p>
  </div>
  <div class="date-range-input-container">
    <input class="date-input" type="date" id="dateStart" placeholder=" -- / -- / ---- " onchange="selectStartDate(event)" />
    <small class="date-to" >To</small>
    <input class="date-input" type="date" id="dateEnd" placeholder=" -- / -- / ---- " onchange="selectEndDate(event)" />
  </div>
</div>

<!-- Markup for filtered  report   box -->

<div class="filtered-report">

   
 <div class="week box">
   <h2>Filtered by</h2>
   <div class="details">
     <table id="total-report">
     
     </table>
   </div>

 
 </div>

 <div class="filtered-date">
   <p><span class="select-start-date">/01/2022</span> to  <span class="select-end-date">/01/2022</span> </p>
 </div>
 </div>

<!-- Markup for report table  -->
<div class="an-employee-report">
  <table>
    <thead>
      <tr>
        <th>Day</th>
        <th>Date</th>
        <th>In</th>
        <th>Out</th>
        <th>Type</th>
        <th>Fixed Time</th>
        <th>Working Time</th>
        <th>Less / Extra</th>
      </tr>
    </thead>

    <tbody id="an-user-report">

       
      <% userReport.map(el => {%>
        <%# console.log('holiday',el.date_for_holiday) %> 
        <%#console.log('day',el.day) %> 
      <tr
        class="
          <%=
          el.day===
          "Friday"
          ?
          "bg-red-200": el.type === "holiday"
         
          ? "bg-yellow-200" : el.type === "leave" ? "bg-red-400"  :  "bg-blue-200"
          
          
          %>
          text-black
        "
      >
        <td><%= el.day %></td>
        <td><%= el.date  %></td>
        <td> <%= el.start  %> </td>
        <td><%=  el.end %></td>
        <td><%= el.day === 'Friday' ? 'Off day' : el.type %></td>
        <% let isZero = el.fixed_time[0]  %> 

        <td><%= el.day === 'Friday' ? '0' : el.fixed_time.replace(isZero, ' ')  %>  hr</td>
        <td><%= el.working_time %></td>
        <td>
          <%= el.type !== 'regular'  ? '00:00:00' : el.time_count %>
        </td>
        
      </tr>
      <% }) %>

      
    </tbody>
    <!-- Table footer -->
    <!-- <tfoot id="last-seven-days-total" class="an-employee-report">
      <% employeeLastSevendaysReportTotal.map(el => {%> 
     

      <tr class="bg-blue-500 text-center text-white font-bold">
        <td colspan="2">Total = <%= 'Present' + ' ' + el.present + '/' + '7'%>  </td>
        <td class="p-3"><%= el.avgStartTime  || '00' %> </td>
        <td class="p-3"><%= el.avgEndTime  || '00'%> </td>
        <td class="p-3"></td>
        <td class="p-3"><%= el.fixed_total + 'hr' || '00'  %></td>
        <td class="p-3"><%= el.weekTotal || '00' %> </td>
        <td class="p-3"><%= el.totalLessORExtra === 'NaN:NaN:NaN' ? '00' : el.totalLessORExtra %></td> 
      </tr>
    <% })  %> 
    </tfoot> -->
  </table>
</div>

 
</div>
<div class="pagination" >
  <ul id="pagination">

  </ul>
</div>

<script>
  function workHourFormater(time) {
  if (time == null) return '0'
  const s = time.split(':')
  const hour = `${s[0]}`
  const isZero = hour[0]
  const minutes = `${s[1]}`
  const result = `${isZero === '0' ? hour.replace(isZero, ' ') : hour}:${minutes}`
  const mintIsZeor = result.slice(2, 5)
  const withOutZeroResult = result.replace(mintIsZeor, ' ')
  return (mintIsZeor === ':00') ? withOutZeroResult : result;
}


  const baseUrl = 'http://localhost:5000';

// get start date
let startDate;

// getDate format
function getDateFormat(date) {
  if(date===null){
    return null
  }
  let today = new Date(date);
  const dd = String(today.getDate()).padStart(2, '0');
  const mm = String(today.getMonth() + 1).padStart(2, '0');
  const yyyy = today.getFullYear();
  today = `${yyyy}-${mm}-${dd}`;
console.log({today})
  return today;
}
// get current date
  function getCurrentDate() {
    let today = new Date();
    const dd = String(today.getDate()).padStart(2, '0');
    const mm = String(today.getMonth() + 1).padStart(2, '0');
    const yyyy = today.getFullYear();
    today = `${yyyy}-${mm}-${dd}`;

    return today;
  }
  //console.log(getCurrentDate());
// constructor function
function ReportDetails(day, fixedTotalHour, workHour, avgWorkHour, avgStartTime, avgEndTime) {
  this.day = day
  this.fixedTotalHour = fixedTotalHour
  this.workHour = workHour
  this.avgWorkHour = avgWorkHour
  this.avgStartTime = avgStartTime
  this.avgEndTime = avgEndTime
}

const selectStartDate = async function (event) {
  const dateStart = document.querySelector("#dateStart")
  const dateEnd = document.querySelector("#dateEnd")
  const getDate = getDateFormat(event.target.value);
  //console.log(event.target.value)

const dateRange = async function (event) {
  const dateStart = document.querySelector("#startPicker")
  const dateEnd = document.querySelector("#endPicker")
  const startDate = getDateFormat (startDatePicker.getFullDate())
  const endDate = getDateFormat (endDatePicker.getFullDate() || getCurrentDate())
  console.log(startDate,endDate)

  dateStart.dataset.date = startDate
  dateEnd.dataset.date = endDate
console.log(startDate)
console.log(endDate)

   dateStart.dataset.date = event.target.value;
   dateEnd.dataset.date = getCurrentDate();
  const data = await fetch(
    `${baseUrl}/reports/between/two-date?startDate=${startDate}&endDate=${getCurrentDate()}`,
  );
  const getObjects = await data.json(); 

  //========== date range total  
  console.log(getObjects.reportDateRangeTotal.betweenTowDateTotalToJson)
  const [{day,weekTotal, fixed_total,
  
    avgWorkHour, avgStartTime, avgEndTime}] = getObjects.reportDateRangeTotal.betweenTowDateTotalToJson;
  //console.log(present,weekTotal, fixed_total, avgStartTime, avgEndTime)
  const dateRangeTotal = new ReportDetails(
    day,
    fixed_total,
    weekTotal,
    avgWorkHour,
    avgStartTime,
    avgEndTime,
  );
  console.log(dateRangeTotal !== null)
  console.log(dateRangeTotal.avgEndTime)

  const totalReport = document.getElementById("total-report");
  const filteredReport = document.querySelector('.filtered-report');
  const selectStartDate = document.querySelector('.select-start-date');
  const selectEndDate = document.querySelector('.select-end-date');

console.log("mmmmmmmm", dateRangeTotal === null);

  console.log(filteredReport)
   if(dateRangeTotal === null){
        filteredReport.style.display = 'none !important';
   }else{
     filteredReport.style.display = 'block';
     filteredReport.style.display = 'flex';
     selectStartDate.textContent = getDate
      selectEndDate.textContent = getCurrentDate()
  totalReport.innerHTML = `

      <tr>
          <td>Workday:</td>
          <td> ${dateRangeTotal.day }/6 day <span class="low">- 2</span></td>
        </tr>
        <tr>
          <td>Work hour:</td>
          <td>${dateRangeTotal.workHour }/${ dateRangeTotal.fixedTotalHour} hr</td>
        </tr>
        <tr>
          <td>Avg Work:</td>
          <td> ${ dateRangeTotal.avgWorkHour } hr</td>
        </tr>
        <tr>
          <td>Avg Start:</td>
          <td>${dateRangeTotal.avgStartTime } </td>
        </tr>
        <tr>
          <td>Avg End:</td>
          <td>${ dateRangeTotal.avgEndTime } </td>
        </tr>
  `
      }
  //

  const {dateRangeReport,pageNumber,pageLength,page,numberOfPage} = getObjects.reports
  console.log({pageNumber,page,pageLength,numberOfPage})
  console.log(dateRangeReport)
  const reportTableBody = document.querySelector('#an-user-report')
  reportShow(reportTableBody,dateRangeReport)
  pagination(pageNumber,numberOfPage,page)
  // const pagination = document.querySelector('#pagination')
  // pagination.innerHTML = pageNumber.map(p =>`<a class=${ page==p ? 'page-active' : ''} ><li onclick="page(${p})">  ${p}  </li></a>`).join('')
}

async function page(pageNo){
  const dateStart = document.querySelector("#dateStart").dataset.date
  const dateEnd = document.querySelector("#dateEnd").dataset.date
  const data = await fetch(
    `${baseUrl}/reports/between/two-date?startDate=${startDate}&endDate=${getCurrentDate()}&page=${pageNo}`,
  );
  const getObjects = await data.json(); 
  // let isZero;
  const {dateRangeReport,pageNumber,pageLength,page,numberOfPage} = getObjects.reports
  const reportTableBody = document.querySelector('#an-user-report')
  reportShow(reportTableBody,dateRangeReport)
  pagination(pageNumber,numberOfPage,pageNo)
}

function reportShow(reportTableBody,dateRangeReport){
 return reportTableBody.innerHTML = dateRangeReport.map(el=>
   ` <tr
        class="
          ${el.day ===
          "Friday"
          ?
          "bg-red-200": el.type === "holiday"
         
          ? "bg-yellow-200" : el.type === "leave" ? "bg-red-400"  :  "bg-blue-200"
          
          }
          text-black
        "
      >
        <td>${el.day}</td>
        <td>${el.date}</td>
        <td> ${ el.start  } </td>
        <td>${el.end }</td>
        <td>${ el.day === 'Friday' ? 'Off day' : el.type }</td>
        <td>${ el.fixed_time } hr</td>
        <td>${ el.working_time }</td>
        
        <td>
          ${ el.type !== 'regular'  ? '00:00:00' : el.time_count }
        </td>
      </tr>`
  ).join('')

}
function pagination(pageNumber,numberOfPage,page){
  const pagination = document.querySelector('#pagination')
 return pagination.innerHTML = `<li class="first"  onclick="page(${1})"> </li> 
 <li class="prev" ${Number(page===1) ? "onclick='this.disabled=true'" : `onclick=page(${Number(page-1)})`}></li> 
 ${pageNumber.map(p =>
 `<a class=${ page==p ? 'page-active' : ''} ><li onclick="page(${p})">  ${p}  </li></a>`).join('')}
 <li class="next" ${Number(page===numberOfPage) ? "onclick='this.disabled=true'" : `onclick=page(${Number(page+1)})`}></li> 
 <li class="last" onclick="page(${numberOfPage})"></li> 
 `

}

// when select end date 
const selectEndDate = async (event) => {
  const dateStart = document.querySelector("#dateStart")
  const dateEnd = document.querySelector("#dateEnd")
  const endDate = event.target.value;

  console.log('end date', endDate);
  const data = await fetch(
    `${baseUrl}/reports/between/two-date?startDate=${startDate}&endDate=${endDate}`,);
  const getObjects = await data.json();
  console.log("xxxx",getObjects)
   //========== date range total  
   console.log(getObjects.reportDateRangeTotal.betweenTowDateTotalToJson)
  const [{day,weekTotal, fixed_total,
  
    avgWorkHour, avgStartTime, avgEndTime}] = getObjects.reportDateRangeTotal.betweenTowDateTotalToJson;
  //console.log(present,weekTotal, fixed_total, avgStartTime, avgEndTime)
  const dateRangeTotal = new ReportDetails(
    day,
    fixed_total,
    weekTotal,
    avgWorkHour,
    avgStartTime,
    avgEndTime,
  );
 console.log({dateRangeTotal})
  
  const totalReport = document.getElementById("total-report");
  const filteredReport = document.querySelector('.filtered-report');
  const selectStartDate = document.querySelector('.select-start-date');
  const selectEndDate = document.querySelector('.select-end-date');



  console.log(filteredReport)
   if(dateRangeTotal === null){
        filteredReport.style.display = 'none !important';
   }else{
     filteredReport.style.display = 'block';
     filteredReport.style.display = 'flex';
      selectEndDate.textContent = endDate;
  totalReport.innerHTML = `

      <tr>
          <td>Workday:</td>
          <td> ${dateRangeTotal.day }/6 day <span class="low">- 2</span></td>
        </tr>
        <tr>
          <td>Work hour:</td>
          <td>${dateRangeTotal.workHour }/${ dateRangeTotal.fixedTotalHour} hr</td>
        </tr>
        <tr>
          <td>Avg Work:</td>
          <td> ${ dateRangeTotal.avgWorkHour } hr</td>
        </tr>
        <tr>
          <td>Avg Start:</td>
          <td>${dateRangeTotal.avgStartTime } </td>
        </tr>
        <tr>
          <td>Avg End:</td>
          <td>${ dateRangeTotal.avgEndTime } </td>
        </tr>
  `
}

//========== date range report data and pagination

const {dateRangeReport,pageNumber,pageLength,page,numberOfPage} = getObjects.reports
  console.log({pageNumber,page,pageLength,numberOfPage})
  console.log(dateRangeReport)
  const reportTableBody = document.querySelector('#an-user-report')
  reportShow(reportTableBody,dateRangeReport)
  pagination(pageNumber,numberOfPage,page)
          
  } 
</script>

<%- include("../partials/footer"); -%>